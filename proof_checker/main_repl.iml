open Utils
open Json_decoder
open Proof_tree
open Checker

let file_path = "json/proof_2_9_3_lemmas.json";;

let load_proof = JSON_decoder.decode_proof_file [@@program]

let rec print_leaf' (n: ProofTree.t) = 
    match n with
    | ProofTree.Node (_, _, left_child, right_child) -> print_leaf' left_child
    | ProofTree.Leaf (_, _, contradiction) -> contradiction
    [@@program]

let print_leaf file_name = 
    let proof_res = load_proof file_name in
    match proof_res with
    | Ok (_, _, _, _, proof_tree) -> print_leaf' proof_tree        
    | Error e -> []
    [@@program]


let get_tableau file_name = 
    let proof_res = load_proof file_name in
    match proof_res with
    | Ok (tableau, _, _, _, _) -> tableau        
    | Error e -> []
    [@@program]

let check_proof_file file_name =
    let proof_res = load_proof file_name in
    match proof_res with
    | Ok (tableau, upper_bounds, lower_bounds, constraints, proof_tree) -> 
        check_proof_tree tableau upper_bounds lower_bounds constraints proof_tree
    | Error e -> let () = Printf.printf "Error opening proof file %s\n" file_name in
                 false
    [@@program]

(* change below to the desired proof file *)
(* let current_proof = "json/acasxu_5_7_p3_NL.json"
[@@program]

let () = Printf.printf "Result for %s: %b\n" current_proof (check_proof_file current_proof) 
[@@program] *)
