open Utils
open Constraint
open Proof_tree
open Check_splits
open Certificate
open Checker
open Arithmetic
open Bound_lemma
open Tightening
open Farkas_lemma

let rec eq_list l1 l2 = 
match l1, l2 with 
| [], [] -> true
| h1 :: t1, h2 :: t2 -> h1 = h2 && eq_list t1 t2
| [], _ | _, [] -> false

let rec different_at_index l1 l2 i =
    match l1, l2 with
    | [], [] -> true
    | h1 :: t1, h2 :: t2 -> 
        if i <> 0 then h1 = h2 && different_at_index t1 t2 (i - 1)
        else different_at_index t1 t2 (i - 1)
    | [], _ | _, [] -> false
    [@@adm l1, l2]

lemma different_at_index_matrix_to_system ubs ubs' i x =
    different_at_index ubs ubs' i
    ==>
    eval_system (mk_bound_poly ubs)

(* Assuming that the left side of the single variable constraint is the upper bound *)
lemma single_var_tightenings_to_poly_system tableau ubs lbs x 
        ((index_l, value_l, btype_l) as left: Tightening.t) 
        ((index_r, value_r, btype_r) as right: Tightening.t) =
    let size = List.length ubs in
    let ub_left = Tightening.update_bounds' ubs [left] Utils.UPPER in
    let lb_left = Tightening.update_bounds' lbs [left] Utils.LOWER in
    let ub_right = Tightening.update_bounds' ubs [right] Utils.UPPER in
    let lb_right = Tightening.update_bounds' lbs [right] Utils.LOWER in
    check_single_var_split [left] [right]
    ==>
    eval_system (mk_system_contradiction (mk_eq_constraints tableau) ub_left lb_left) x
    = (
        eval_system (mk_system_contradiction (mk_eq_constraints tableau) ubs lbs) x
        && eval_exp (Geq (mk_bound_poly size index_l (-1.) value_l)) x
    )

(* TODO: link (update_bounds/set_nth) with (ub_left lb_left)
link eval_system [...] ub_left lb_left to eval_system ubs lbs *)

lemma sound_split_poly_system tableau ubs lbs x  
        (left: Tightening.t list) (right: Tightening.t list) =
    let ub_left = Tightening.update_bounds' ubs left Utils.UPPER in
    let lb_left = Tightening.update_bounds' lbs left Utils.LOWER in
    let ub_right = Tightening.update_bounds' ubs right Utils.UPPER in
    let lb_right = Tightening.update_bounds' lbs right Utils.LOWER in
    check_single_var_split left right &&
    eval_system (mk_system_contradiction (mk_eq_constraints tableau) ubs lbs) x
    ==>
    eval_system (mk_system_contradiction (mk_eq_constraints tableau) ub_left lb_left) x ||
        eval_system (mk_system_contradiction (mk_eq_constraints tableau) ub_right lb_right) x
    [@@auto]
    [@@fc]
