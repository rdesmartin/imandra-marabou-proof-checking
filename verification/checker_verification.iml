
(** Return true if the variable vector x is a solution to the tableau *)
let is_solution (tableau: real list list) (x: real list) : bool =
    all (List.map (fun row -> dot_product row x = 0.))


lemma split_correctness = 


lemma node_checker_verification tableau upper_bounds lower_bounds constraints proof_tree x =
    valid_bounds && valid_children_splits && valid_children 
    ==>
    (is_bounded lower_bounds x upper_bounds &&
    is_solution tableau x
    ) = false

theorem checker_verification tableau upper_bounds lower_bounds constraints proof_tree x =
    check_proof_tree tableau upper_bounds lower_bounds proof_tree
    ==> 
    (is_bounded lower_bounds x upper_bounds &&
     is_solution tableau x
    ) = false