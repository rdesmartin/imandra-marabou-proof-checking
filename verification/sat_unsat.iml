open Arithmetic
open Constraint

let check_relu_constraints = Constraint.check_relu_constraints

let unsat tableau upper_bounds lower_bounds relu_constraints x =
    (is_in_kernel tableau x &&
    is_bounded x upper_bounds lower_bounds  &&
    check_relu_constraints relu_constraints x) = false

let sat tableau upper_bounds lower_bounds relu_constraints x =
    (is_in_kernel tableau x &&
    is_bounded x upper_bounds lower_bounds  &&
    check_relu_constraints relu_constraints x)

lemma sat_not_unsat tableau upper_bounds lower_bounds relu_constraints x =
    sat tableau upper_bounds lower_bounds relu_constraints x = 
    not (unsat tableau upper_bounds lower_bounds relu_constraints x)

lemma unsat_not_sat tableau upper_bounds lower_bounds relu_constraints x =
    unsat tableau upper_bounds lower_bounds relu_constraints x = 
    not (sat tableau upper_bounds lower_bounds relu_constraints x)

lemma sat_linear_fc tableau ubs lbs relu_constraints x = 
    sat tableau ubs lbs relu_constraints x
    ==> 
    is_in_kernel tableau x &&
    is_bounded x ubs lbs
    [@@fc]